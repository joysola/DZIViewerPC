<base:BaseUserControl x:Class="DST.PIMS.Client.Views.ImageViewer"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:local="clr-namespace:DST.PIMS.Client.Views"
                      xmlns:hc="https://handyorg.github.io/handycontrol"
                      xmlns:base="clr-namespace:DST.Controls.Base;assembly=DST.Controls"
                      xmlns:deepzoom="clr-namespace:Nico.DeepZoom;assembly=Nico.DeepZoomSource"
                      xmlns:frm="clr-namespace:DST.PIMS.Framework.Controls;assembly=DST.PIMS.Framework"
                      xmlns:vm="clr-namespace:DST.PIMS.Client.ViewModel;assembly=DST.PIMS.Client.ViewModel"
                      xmlns:msi="clr-namespace:Nico.DeepZoom;assembly=Nico.DeepZoomSource"
                      xmlns:fcv="clr-namespace:DST.PIMS.Framework.StyleConverters;assembly=DST.PIMS.Framework"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib"
                      mc:Ignorable="d"
                      d:DataContext="{d:DesignInstance Type=vm:ImgVwViewModel}"
                      d:DesignHeight="750"
                      d:DesignWidth="1200">
    <Grid x:Name="mainGrid"
          ClipToBounds="True">
        <Grid.Resources>
            <fcv:ImgViewerMarginConverter x:Key="ImgViewerMarginConverter" />
            <fcv:ImgViewerSquareSizeConverter x:Key="ImgViewerSquareSizeConverter" />
            <fcv:ImgViewerDetailPopwidthConverter x:Key="ImgViewerDetailPopwidthConverter" />
            <fcv:ImgVwrDtlPopMaxWidthConverter x:Key="ImgVwrDtlPopMaxWidthConverter" />
            <fcv:WhiteBalanceWidthConverter x:Key="WhiteBalanceWidthConverter" />
            <fcv:CutScanListWidthConverter x:Key="CutScanListWidthConverter" />
            <frm:ImgDX9Effect x:Key="shader"
                              Red="{Binding ElementName=WhtBlnc,Path=Red,Mode=OneWay}"
                              Green="{Binding ElementName=WhtBlnc,Path=Green,Mode=OneWay}"
                              Blue="{Binding ElementName=WhtBlnc,Path=Blue,Mode=OneWay}"
                              Brightness="{Binding ElementName=WhtBlnc,Path=Brightness,Mode=OneWay}"
                              Contrast="{Binding ElementName=WhtBlnc,Path=Contrast,Mode=OneWay}"
                              Gamma="{Binding ElementName=WhtBlnc,Path=Gamma,Mode=OneWay}" />
            <sys:Double x:Key="wbWidthParam">0.2</sys:Double>
            <sys:Double x:Key="annListWidthParam">0.4</sys:Double>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <!--这个 canBaseGrid用于作为Canvas旋转的基准存在-->
        <!--<Grid x:Name="canBaseGrid"
              Panel.ZIndex="-5"
              Grid.ColumnSpan="2"
              Grid.RowSpan="2"
              Width="{Binding ElementName=Bg,Path=ActualWidth}"
              Height="{Binding ElementName=Bg,Path=ActualHeight}">
            <Grid.Margin>
                <MultiBinding Converter="{StaticResource ImgViewerMarginConverter}">
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualWidth" />
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualHeight" />
                </MultiBinding>
            </Grid.Margin>-->
        <Canvas x:Name="Bg"
                Height="{Binding RelativeSource={RelativeSource Mode=Self},Path=ActualWidth}"
                PreviewMouseLeftButtonDown="Bg_MouseLeftButtonDown"
                PreviewMouseRightButtonDown="Bg_PreviewMouseRightButtonDown"
                PreviewMouseRightButtonUp="Bg_PreviewMouseRightButtonUp"
                RenderTransformOrigin="0.5,0.5"
                MouseDown="CloseAllPopups">
            <!--尺寸一致取最大边长-->
            <Canvas.Width>
                <MultiBinding Converter="{StaticResource ImgViewerSquareSizeConverter}">
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualWidth" />
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualHeight" />
                </MultiBinding>
            </Canvas.Width>
            <!--调节位置到中心-->
            <Canvas.Margin>
                <MultiBinding Converter="{StaticResource ImgViewerMarginConverter}">
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualWidth" />
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=base:BaseUserControl}"
                             Path="ActualHeight" />
                </MultiBinding>
            </Canvas.Margin>
            <!--旋转相关-->
            <Canvas.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="BGRttTrans"
                                     Angle="{Binding ElementName=rotater,Path=Value}" />
                </TransformGroup>
            </Canvas.RenderTransform>
            <msi:MultiScaleImage x:Name="msi"
                                 Visibility="Collapsed"
                                 Width="{Binding ElementName=Bg,Path=ActualWidth}"
                                 Height="{Binding ElementName=Bg,Path=ActualHeight}"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center"
                                 MouseLeftButtonDown="Msi_MouseLeftButtonDown"
                                 MouseMove="Msi_MouseMove"
                                 MouseLeftButtonUp="Msi_MouseLeftButtonUp"
                                 MouseWheel="Msi_MouseWheel"
                                 MouseDown="CloseAllPopups"
                                 Ini="Msi_Ini"
                                 Source="{Binding CurTileSource,UpdateSourceTrigger=PropertyChanged}"
                                 Effect="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=MSIEffect,UpdateSourceTrigger=Explicit}" />
        </Canvas>
        <!--</Grid>-->
        <StackPanel  Grid.Row="1"
                     Grid.Column="0"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom">
            <frm:ScaleRuler x:Name="scaleRuler"
                            Grid.Column="1"
                            Grid.Row="1"
                            VerticalAlignment="Bottom"
                            MouseDown="CloseAllPopups"
                            Curscale="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=Curscale,UpdateSourceTrigger=PropertyChanged}" />
            <frm:Navmap  x:Name="navmap"
                         Grid.Row="1"
                         Grid.Column="0"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Bottom"
                         Margin="2"
                         ThumbnailSource="{Binding ImgThumbnail,UpdateSourceTrigger=PropertyChanged}"
                         MSI="{Binding ElementName=msi}"
                         MouseDown="CloseAllPopups" />
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Margin="0,0,0,20">
            <frm:RatioCtl Margin="2"
                          CurScaleChange="RatioCtl_CurScaleChange"
                          Curscale="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=Curscale,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}" />
            <frm:Rotater x:Name="rotater"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Bottom"
                         Width="200"
                         MouseDown="CloseAllPopups" />
        </StackPanel>
        <frm:ThumbsList Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Top"
                        DisplayMemberPath="ThumbUrl"
                        MouseDown="CloseAllPopups"
                        SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:ImageViewer},Path=CurAnnoBase,Mode=OneWayToSource}"
                        ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=AnnoInfos.AnnoList,UpdateSourceTrigger=PropertyChanged}" />
        <StackPanel>
            <StackPanel Orientation="Horizontal"
                        Margin="0,5,0,0">
                <Button Style="{StaticResource ButtonPrimary}"
                        x:Name="AnnoListBtn"
                        Margin="5,0,5,0"
                        Content="标记列表"
                        Click="AnnoList_Click" />
                <Button Style="{StaticResource ButtonSuccess}"
                        Content="保存"
                        Command="{Binding SaveCommand}" />
            </StackPanel>
            <ToggleButton Margin="5"
                          x:Name="ImgFuncBtn"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Style="{StaticResource ToggleButtonIconPrimary}"
                          hc:IconSwitchElement.Geometry="{StaticResource DownGeometry}"
                          hc:IconSwitchElement.GeometrySelected="{StaticResource UpGeometry}"
                          Click="ImgFuncBtn_Click" />
        </StackPanel>
        <Popup x:Name="ImgFuncPop"
               AllowsTransparency="True"
               PlacementTarget="{Binding ElementName=ImgFuncBtn}"
               VerticalOffset="5"
               Placement="Bottom">
            <StackPanel Background="Transparent">
                <Button Style="{StaticResource ButtonPrimary}"
                        Margin="5,0,5,0"
                        Content="选择报告视野"
                        Click="SelectReportImg_Click" />
                <Button Style="{StaticResource ButtonPrimary}"
                        HorizontalAlignment="Left"
                        x:Name="WhiteBalanceBtn"
                        Margin="5,5,5,0"
                        Content="白平衡"
                        Click="WhiteBalance_Click" />
                <ToggleButton BorderThickness="0"
                              IsChecked="True"
                              Margin="5,5,5,0"
                              HorizontalAlignment="Left"
                              Style="{StaticResource ToggleButtonCustom}"
                              Click="NavBtn_Click">
                    <hc:StatusSwitchElement.CheckedElement>
                        <Border Background="{DynamicResource PrimaryBrush}"
                                CornerRadius="4"
                                Height="30">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="导航开"
                                       FontSize="{StaticResource TextFontSize}"
                                       Foreground="{DynamicResource TextIconBrush}"
                                       Margin="10,5,10,5" />
                        </Border>
                    </hc:StatusSwitchElement.CheckedElement>
                    <Border Background="{DynamicResource DangerBrush}"
                            CornerRadius="4"
                            Height="30">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="导航关"
                                   FontSize="{StaticResource TextFontSize}"
                                   Foreground="{DynamicResource TextIconBrush}"
                                   Margin="10,6,10,6" />
                    </Border>
                </ToggleButton>
                <ToggleButton BorderThickness="0"
                              IsChecked="True"
                              Margin="5,5,5,0"
                              HorizontalAlignment="Left"
                              Style="{StaticResource ToggleButtonCustom}"
                              Click="RotateBtn_Click">
                    <hc:StatusSwitchElement.CheckedElement>
                        <Border Background="{DynamicResource PrimaryBrush}"
                                CornerRadius="4"
                                Height="30">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="旋转开"
                                       FontSize="{StaticResource TextFontSize}"
                                       Foreground="{DynamicResource TextIconBrush}"
                                       Margin="10,6,10,6" />
                        </Border>
                    </hc:StatusSwitchElement.CheckedElement>
                    <Border Background="{DynamicResource DangerBrush}"
                            CornerRadius="4"
                            Height="30">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="旋转关"
                                   FontSize="{StaticResource TextFontSize}"
                                   Foreground="{DynamicResource TextIconBrush}"
                                   Margin="10,6,10,6" />
                    </Border>
                </ToggleButton>
                <ToggleButton BorderThickness="0"
                              IsChecked="True"
                              Margin="5,5,5,0"
                              HorizontalAlignment="Left"
                              Style="{StaticResource ToggleButtonCustom}"
                              Click="RulerBtn_Click">
                    <hc:StatusSwitchElement.CheckedElement>
                        <Border Background="{DynamicResource PrimaryBrush}"
                                CornerRadius="4"
                                Height="30">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="标尺开"
                                       FontSize="{StaticResource TextFontSize}"
                                       Foreground="{DynamicResource TextIconBrush}"
                                       Margin="10,6,10,6" />
                        </Border>
                    </hc:StatusSwitchElement.CheckedElement>
                    <Border Background="{DynamicResource DangerBrush}"
                            CornerRadius="4"
                            Height="30">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="标尺关"
                                   FontSize="{StaticResource TextFontSize}"
                                   Foreground="{DynamicResource TextIconBrush}"
                                   Margin="10,6,10,6" />
                    </Border>
                </ToggleButton>
            </StackPanel>
        </Popup>
        <Popup x:Name="WBPop"
               Width="{Binding ElementName=mainGrid, Path=ActualWidth, Converter={StaticResource WhiteBalanceWidthConverter},ConverterParameter={StaticResource wbWidthParam}}"
               MinWidth="320"
               PlacementTarget="{Binding ElementName=WhiteBalanceBtn}"
               Placement="Right"
               IsOpen="{Binding ElementName=WhtBlnc,Path=IsOpen}">
            <frm:WhiteBalance x:Name="WhtBlnc" />
        </Popup>
        <Popup x:Name="AnnoMenuPop"
               PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=AnnoInfos.Target,UpdateSourceTrigger=PropertyChanged}"
               Placement="Right">
            <Border Style="{StaticResource BorderRegion}"
                    Padding="5">
                <StackPanel Background="White">
                    <Button Style="{StaticResource ButtonPrimary}"
                            Content="编辑"
                            Click="AnnoEdit_Click" />
                    <Button Style="{StaticResource ButtonDanger}"
                            Margin="0,5,0,0"
                            Content="删除"
                            Click="AnnoDelete_Click" />
                </StackPanel>
            </Border>
        </Popup>
        <Popup x:Name="AnnoListPop"
               Placement="Bottom"
               VerticalOffset="5"
               MaxHeight="300"
               MinWidth="300"
               ScrollViewer.HorizontalScrollBarVisibility="Auto"
               PlacementTarget="{Binding ElementName=AnnoListBtn}"
               Width="{Binding ElementName=mainGrid,Path=ActualWidth,Converter={StaticResource CutScanListWidthConverter},ConverterParameter={StaticResource annListWidthParam}}">
            <Border Style="{StaticResource BorderRegion}">
                <frm:AnnoList SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer},Path=CurAnnoBase,Mode=OneWayToSource}"
                              AnnoInfos="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ImageViewer}, Path=AnnoInfos, Mode=OneWay}"
                              EditAnnoCommand="{Binding EditCommand}" />
            </Border>
        </Popup>
    </Grid>
</base:BaseUserControl>
