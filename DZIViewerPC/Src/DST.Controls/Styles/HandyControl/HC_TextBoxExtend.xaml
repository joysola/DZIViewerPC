<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:ctl="clr-namespace:DST.Controls"
                    xmlns:cv="clr-namespace:DST.Controls.Converter"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--扩展了hc:TextBox时，hc:InfoElement的对齐方式，新增右侧对齐-->
    <ControlTemplate x:Key="TextBoxPlusExLeftTemplate"
                     TargetType="hc:TextBox">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardShow">
                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                    Storyboard.TargetProperty="Margin"
                                    To="9,0,0,-18"
                                    Duration="0:0:.2" />
            </Storyboard>
            <Storyboard x:Key="StoryboardHidden">
                <ThicknessAnimation Storyboard.TargetName="TextBlockError"
                                    Storyboard.TargetProperty="Margin"
                                    To="9,0,0,4"
                                    Duration="0:0:0" />
            </Storyboard>
            <cv:RegisterTextBoxInputHeightConverter x:Key="RegisterTextBoxInputHeightConverter" />
        </ControlTemplate.Resources>
        <Grid MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
              Height="{Binding Path=(hc:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(hc:InfoElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock FontSize="12"
                       Text="{TemplateBinding ErrorStr}"
                       Name="TextBlockError"
                       VerticalAlignment="Bottom"
                       Margin="9,0,0,4"
                       Foreground="{DynamicResource DangerBrush}"
                       Grid.Column="1" />
            <DockPanel LastChildFill="True"
                       Grid.Column="0"
                       Visibility="{Binding Path=(hc:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       VerticalAlignment="{Binding Path=(hc:TitleElement.VerticalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="0,7,6,7">
                <ContentPresenter DockPanel.Dock="Left"
                                  TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="0,0,4,0"
                                  Content="{Binding Path=(hc:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(hc:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock hc:TextBlockAttach.AutoTooltip="True"
                           TextWrapping="{Binding Path=(ctl:RegisterElement.TitleWarp),RelativeSource={RelativeSource TemplatedParent}}"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(hc:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Border Grid.Column="1"
                    x:Name="templateRoot"
                    CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                <Border.Height>
                    <MultiBinding Converter="{StaticResource RegisterTextBoxInputHeightConverter}">
                        <Binding Path="(ctl:RegisterElement.InputControlHeight)" RelativeSource="{RelativeSource TemplatedParent}"/>
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Grid}"/>
                    </MultiBinding>
                </Border.Height>
                <Grid SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Margin="{TemplateBinding Padding}"
                               Visibility="{TemplateBinding Text,Converter={StaticResource String2VisibilityReConverter}}"
                               HorizontalAlignment="Stretch"
                               Style="{StaticResource TextBlockDefaultThiLight}"
                               Text="{Binding Path=(hc:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}" />
                    <ScrollViewer Grid.Column="0"
                                  Margin="-2,0,-1,0"
                                  Padding="{TemplateBinding Padding}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                    <Button Height="{x:Static system:Double.NaN}"
                            Command="hc:ControlCommands.Clear"
                            Margin="0,0,7,0"
                            Visibility="Collapsed"
                            Name="ButtonClear"
                            Width="16"
                            Grid.Column="1"
                            Style="{StaticResource ButtonIcon}"
                            Padding="0,6"
                            hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                            Foreground="{Binding BorderBrush,ElementName=templateRoot}" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        TargetName="templateRoot"
                        Value="0.4" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true"
                     SourceName="templateRoot">
                <Setter Property="BorderBrush"
                        Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="true"
                               SourceName="templateRoot" />
                    <Condition Property="ShowClearButton"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        Value="Visible"
                        TargetName="ButtonClear" />
            </MultiTrigger>
            <Trigger Property="IsFocused"
                     Value="true">
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsError"
                     Value="true">
                <Setter Property="BorderBrush"
                        TargetName="templateRoot"
                        Value="{DynamicResource DangerBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--登记表单中常用hc:TextBox常用格式-->
    <Style x:Key="TextBoxRegister"
           TargetType="hc:TextBox"
           BasedOn="{StaticResource TextBoxPlusBaseStyle}">
        <Setter Property="hc:InfoElement.HorizontalAlignment"
                Value="Right" />
        <Setter Property="hc:InfoElement.TitlePlacement"
                Value="Left" />
        <Setter Property="hc:InfoElement.TitleWidth"
                Value="100" />
        <Setter Property="hc:InfoElement.Symbol"
                Value="*" />
        <Setter Property="ShowClearButton"
                Value="True" />
        <Setter Property="Margin"
                Value="0,0,5,10" />
        <!--<Setter Property="Template" Value="{StaticResource TextBoxPlusTopTemplate}" />-->
        <Style.Triggers>
            <Trigger Property="hc:InfoElement.TitlePlacement"
                     Value="Left">
                <Setter Property="Template"
                        Value="{StaticResource TextBoxPlusExLeftTemplate}" />
                <Setter Property="Width"
                        Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="TextBoxAppRegister"
           BasedOn="{StaticResource TextBoxRegister}"
           TargetType="hc:TextBox">
        <Setter Property="Margin"
                Value="0,0,5,20" />
    </Style>
    
</ResourceDictionary>